{"version":3,"file":"static/js/980.91dc0b96.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\ndisplay: flex;\njustify-content: center;\n`;\n\nexport const Form = styled.div`\nflex: 1;\npadding: 10px 50px 0 50px;\n\n`;\n\nexport const Phonebook = styled.div`\nflex: 2;\npadding: 10px 50px 0 0px;\n\n\n`;\n\nexport const Title = styled.h2`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ngap: 15px;\ncolor: #2F4F4F;\n`;","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  padding: 25px;\n\n\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.3);\n`;\n\nexport const FormField = styled.div`\n  padding-right: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  width: 100%;\n  font-size: 16px;\n\n  border: none;\n  border-bottom: 1px solid #2f4f4f;\n  padding: 10px 10px;\n\n  &:focus {\n    outline: none;\n  }\n  margin-top: 15px;\n  \n`;\n\nexport const Span = styled.span`\n  font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  border:none;\n  border-radius: 5px;\n  color: #fff;\n  background-color: #938eef;\n  letter-spacing: 2px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #fff;\n    color: orangered;\n  }\n\n  cursor: pointer;\n`;\n\nexport const ButtonField = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;","\nimport { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filters;\n\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    \n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.trim().toLowerCase())\n    );\n    }\n);\n\n\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport {\n  FormContainer,\n  FormField,\n  Label,\n  Input,\n  Span,\n  Button,\n  ButtonField,\n} from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    name === 'name' && setName(value);\n    name === 'number' && setNumber(value);\n  };\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.some(contact => {\n        return contact.name.toLowerCase() === name.toLowerCase();\n      })\n    ) {\n      return Notiflix.Notify.failure(`${name} is already in your Book`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    Notiflix.Notify.success(`${name} is added`);\n    resetForm();\n  };\n\n  return (\n    <Formik>\n      <Form onSubmit={handleSubmit}>\n        <FormContainer>\n          <FormField>\n            <Label>\n              <Span>Name</Span>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter name\"\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n                required\n              />\n            </Label>\n          </FormField>\n          <FormField>\n            <Label>\n              <Span>Phone Number</Span>\n              <Input\n                type=\"tel\"\n                placeholder=\"Enter phone number\"\n                name=\"number\"\n                value={number}\n                onChange={handleChange}\n                required\n              />\n            </Label>\n          </FormField>\n          <ButtonField>\n            <Button type=\"submit\">Add Contact</Button>\n          </ButtonField>\n        </FormContainer>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const FormFilter = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  border: none;\n  border-bottom: 1px solid #2f4f4f;\n  padding: 10px 10px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import React from 'react'\nimport { FormFilter, Input } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\n// import { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n\n  // const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n\n    return (\n        <FormFilter>\n          <label>\n             <Input type=\"name\" placeholder=\"Please enter a name to search\" name='search'  onChange={handleChange} />\n          </label>\n        </FormFilter>\n      );\n}\n\nexport default Filter\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 30px;\n  gap:10px;\n  \n`;\n\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 2px solid #fff;\n\n \n  padding: 5px 10px;\n  font-size: 16px;\n  font-weight: 600;\n  width: 400px;\n`;\n\n\nexport const Name = styled.span`\nflex: 1`;\n\nexport const Number = styled.span`\n  color: FireBrick;\n  margin-left: 10px;\n  flex:1\n\n`;\n\nexport const Button = styled.button`\nwidth: 25px;\nheight: 25px\ncolor: red;\nbackground-color: transparent;\n\nborder: none;\ncursor:pointer;\nmargin-left: 10px;\ncolor: Salmon;\n\n&:hover {\n    color: orangered;\n  }\n\n`;","import React from 'react';\nimport RestoreFromTrashIcon from '@mui/icons-material/RestoreFromTrash';\nimport { Item, Name, Number, Button } from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport Notiflix from 'notiflix';\n\nconst ContactListItem = ({ id, name, number }) => {\n  \n    const dispatch = useDispatch();\n    const handleDelete = () => {\n        dispatch(deleteContact(id));\n         Notiflix.Notify.success(`${name} is removed`);\n       };\n\n\n  return (\n    <>\n     <Item>\n      <Name>{name}</Name>\n      <Number>{number}</Number>\n      <Button type=\"button\">\n        <RestoreFromTrashIcon onClick={handleDelete} />\n      </Button>\n    </Item>\n    </>\n   \n  );\n};\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  };\n\nexport default ContactListItem;\n","import React from 'react'\nimport { List } from './ContactList.styled'\nimport ContactListItem from './ContactListItem'\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n    const contacts = useSelector(selectFilteredContacts);\n    console.log(contacts)\n  return (\n    <List>\n        {contacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} number={number} name={name} />\n      ))}\n  </List>\n  )\n}\n\nexport default ContactList\n","import React from 'react';\nimport { Container, Form, Phonebook, Title } from './Contacts.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport RecentActorsIcon from '@mui/icons-material/RecentActors';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  return (\n    <>\n    <Container>\n    <Form>\n        <ContactForm/>\n    </Form>\n    <Phonebook>\n\n        <Title>\n            <RecentActorsIcon fontSize=\"large\"/> Contact List\n        </Title>\n        <Filter/>\n        <ContactList />\n   \n        \n    </Phonebook>\n        \n    </Container>\n   \n  </>\n  )\n}\n\nexport default Contacts\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Phonebook","_templateObject3","Title","_templateObject4","FormContainer","FormField","Label","Input","Span","_templateObject5","Button","_templateObject6","ButtonField","_templateObject7","selectContacts","state","contacts","items","selectFilteredContacts","createSelector","filters","filter","contact","name","toLowerCase","includes","trim","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","useSelector","dispatch","useDispatch","_jsx","Formik","children","onSubmit","preventDefault","some","Notiflix","concat","addContact","_jsxs","type","placeholder","onChange","required","FormFilter","changeFilter","List","Item","Name","Number","_ref","id","_Fragment","RestoreFromTrashIcon","onClick","deleteContact","console","log","map","ContactListItem","ContactForm","RecentActorsIcon","fontSize","Filter","ContactList"],"sourceRoot":""}